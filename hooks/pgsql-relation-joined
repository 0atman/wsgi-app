#!/usr/bin/env python

# System
from time import time
from os import path, pardir, makedirs

# Third-party
from jinja2 import Environment, FileSystemLoader
from charmhelpers.fetch import apt_install
from charmhelpers.core.hookenv import (
    relation_get, config, local_unit, relation_set
)


def parent_dir(dir_path):
    if not path.isdir(dir_path):
        dir_path = path.dirname(dir_path)

    return path.abspath(path.join(dir_path, pardir))


def setup_database_relation(database_name, host, user, password):
    """
    Prepare the charm for postgres database relation
    By putting database settings in a python settings file
    """

    # Get database template
    charm_dir = parent_dir(__file__)
    jinja_env = Environment(loader=FileSystemLoader(charm_dir))
    database_template = jinja_env.get_template('templates/pgsql.tmpl')

    # Get database information
    apt_install(['python-psycopg2', 'postgresql-client'])

    # Get relation settings directory
    unit_name = local_unit().replace('/', '-')
    config_dir = path.join(
        "/srv",
        unit_name,
        "code",
        config('build_label'),
        config('relation_config_dir')
    )

    # Make sure dir exists
    if not path.isdir(config_dir):
        makedirs(config_dir)

    # Database settings
    relation_context = database_template.render({
        "name": database_name,
        "host": host,
        "user": user,
        "password": password
    })

    # Write settings
    with open(path.join(config_dir, 'pgsql.py'), 'a') as config_file:
        config_file.write(relation_context)

    # Set timestamp to trigger service restart
    relation_set(wsgi_timestamp=time())


database_name = relation_get("database")
host = relation_get("host")

if database_name and host:
    setup_database_relation(
        database_name, host,
        relation_get("user"), relation_get("password")
    )
